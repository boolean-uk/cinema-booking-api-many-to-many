// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Customer {
  id        Int      @id @default(autoincrement())
  name      String
  contact   Contact?
  tickets   Ticket[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Contact {
  id         Int      @id @default(autoincrement())
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId Int      @unique
  phone      String
  email      String   @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Movie {
  id          Int         @id @default(autoincrement())
  screenings  Screening[]
  title       String
  runtimeMins Int
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Screen {
  id         Int         @id @default(autoincrement())
  number     Int
  screenings Screening[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  seat       Seat[]
}

model Screening {
  id        Int      @id @default(autoincrement())
  tickets   Ticket[]
  movie     Movie    @relation(fields: [movieId], references: [id])
  movieId   Int
  screen    Screen   @relation(fields: [screenId], references: [id])
  screenId  Int
  startsAt  DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Ticket {
  id          Int              @unique @default(autoincrement())
  screening   Screening        @relation(fields: [screeningId], references: [id])
  screeningId Int
  customer    Customer         @relation(fields: [customerId], references: [id])
  customerId  Int
  seats       TicketsOnSeats[]
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt

  @@id([id, screeningId])
}

model Seat {
  id        Int              @id @default(autoincrement())
  tickets   TicketsOnSeats[]
  screenId  Int
  screen    Screen           @relation(fields: [screenId], references: [id])
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
}

model TicketsOnSeats {
  ticket      Ticket @relation(fields: [ticketId, screeningId], references: [id, screeningId])
  ticketId    Int
  seat        Seat   @relation(fields: [seatId], references: [id])
  seatId      Int
  screeningId Int

  @@id([ticketId, screeningId, seatId])
  @@unique([screeningId, seatId])
}
